1. Create table given below: Employee and Incentive
==================================================
->Create Table Employee :
=.=.=.=.=.=.=.=.=.=.=.=.=.
CREATE TABLE Employee (Employee_id int(10),First_name varchar(200),Last_name varchar(200),
Salary int(10),Joining_date datetime,Department varchar(100));

->Insert Table Employee :
=.=.=.=.=.=.=.-.-.-.-.-.


Inch Column update query use in date formation
UPDATE `employee` SET`Joining_date`='2023-05-12'WHERE `employee`.`Employee_id`=1;

INSERT INTO employee(Employee_id,First_name,Last_name,Salary,Joining_date,Department)VALUES
(1,'John','Abraham','1000000','01-jan-13 12.00.00 AM','Banking');

INSERT INTO employee(Employee_id,First_name,Last_name,Salary,Joining_date,Department)VALUES
(2,'Michael','Clarke',800000,'01-JAN-13 12.00.00 AM','Insurance'),

INSERT INTO employee(Employee_id,First_name,Last_name,Salary,Joining_date,Department)VALUES
(3,'Roy','Thomas',700000,'01-FEB-13 12.00.00 AM','Banking'),

INSERT INTO employee(Employee_id,First_name,Last_name,Salary,Joining_date,Department)VALUES
(4,'Tom','Jose',600000,'01-FEB-13 12.00.00 AM','Insuarnce'),

INSERT INTO employee(Employee_id,First_name,Last_name,Salary,Joining_date,Department)VALUES
(5,'Jerry','Pinto',650000,'01-FEB-13 12.00.00 AM','Insuarnce'),

INSERT INTO employee(Employee_id,First_name,Last_name,Salary,Joining_date,Department)VALUES
(6,'Philip','Mathew',750000,'01-JAN-13 12.00.00 AM','Service'),

INSERT INTO employee(Employee_id,First_name,Last_name,Salary,Joining_date,Department)VALUES
(7,'TestName1','123',650000,'01-JAN-13 12.00.00 AM','Service'),

INSERT INTO employee(Employee_id,First_name,Last_name,Salary,Joining_date,Department)VALUES
(8,'TestName2','Lname%',600000,'01-FEB-13 12.00.00 AM','Insuarnce');

Create table given below: Incentive
===================================
->Create Table Employee :
.=.=...=.=.=..=.=.=.=.=.=.=
Inch Column update query use in date formation
UPDATE `incentive` SET`Incentive_date`='2023-05-12'WHERE `incentive`.`Employee_ref_id`=1;


CREATE TABLE  Incentive (Employee_ref_id int(10),Incentive_date date,Incentive_amount int(20));

->Insert Table Incentive :
.=.=.=.=.=.=.=.=.=.=.=.=.=.
INSERT INTO incentive(Employee_ref_id,Incentive_date,Incentive_amount)VALUES(1,'01-FEB-13',5000);

INSERT INTO incentive(Employee_ref_id,Incentive_date,Incentive_amount)VALUES(2,'01-FEB-13',3000);

INSERT INTO incentive(Employee_ref_id,Incentive_date,Incentive_amount)VALUES(3,'01-FEB-13',4000);

INSERT INTO incentive(Employee_ref_id,Incentive_date,Incentive_amount)VALUES(1,'01-JAN-13',4500);

INSERT INTO incentive(Employee_ref_id,Incentive_date,Incentive_amount)VALUES(2,'01-JAN-13',3500);


Question Answer
---------------:->

Question a : Get First_Name from employee table using Tom name “Employee Name”

Answer :-select First_name `First_name` FROM employee;

Question b : Get FIRST_NAME, Joining Date, and Salary from employee table.:

Answer :-SELECT First_name,Joining_date,Salary FROM `employee`;

Question c : Get all employee details from the employee table order by First_Name 
Ascending and Salary descending?

Answer :-SELECT * FROM `employee` ORDER BY employee.First_name ASC,employee.Salary DESC;

Question d :- Get employee details from employee table whose first name contains ‘o’.

Answer :-SELECT * FROM `employee` WHERE First_name LIKE '%o%';

Question e :- Get employee details from employee table whose joining month is “January”

Answer :- SELECT *FROM employees WHERE to_char(Joining_date, 'mon')='jan';

Question f :- Get department, total salary with respect to a department from employee table
Order By total salary descending.

Answer : -> SELECT department, SUM (SALARY) TOTAL_SALARY FROM emplyoee GROUP BY department
ORDER BY TOTAL_SALARY DESC;

Question g :- Get department wise maximum salary from employee table order by salary 
ascending?

Answer:->SELECT * FROM employee ORDER by Salary ASC;

Question h :- Select first_name, incentive amount from employee and incentives table for 
those employees who have incentives and incentive amount greater than 3000 

Answer :->   SELECT FIRST_NAME,Incentave_amount FROM EMPLOYEE  INNER JOIN incentive 
  ON employee.EMPLOYEE_ID=incentive.EMPLOYEE_REF_ID AND Incentave_amountT >3000;

Question i :- Select 2nd Highest salary from employee table.

Answer :-> SELECT MAX(SALARY) FROM employee WHERE SALARY < (SELECT MAX(SALARY) FROM employee); 

Question j :- Select first_name, incentive amount from employee and incentives table for all
Employees who got incentives using left join. 

Answer :-> SELECT First_name, Incentive_amount FROM emplyoee A INNER JOIN INCENTIVES B 
  ON A.Emplyoee_ID=B.Emplyoee_REF_ID;

Question k :- Create View OF Employee table in which store first name, last name and salary
only. 

Answer :-> CREATE VIEW Emplyoee_view AS SELECET First_name,Last_name,Salaet FROM Emplyoee

Question l :- Create Procedure to find out department wise highest salary

Answer :-> SELECT Department, MAX(Salary) FROM Emplyoee GROUP BY Department

Question m :- Create After Insert trigger on Employee table which insert records in view 
table

Answer :-> CREATE TABLE employee_audit (
    id INT AUTO_INCREMENT PRIMARY KEY,
    employeenumber INT NOT NULL,
     first_name VARCHAR(50) NOT NULL,
    salary int DEFAULT NULL,
    action VARCHAR(50) DEFAULT NULL
);
CREATE TRIGGER before_employee_update 
    BEFORE UPDATE ON employee
    FOR EACH ROW 
 INSERT INTO employee_audit
 SET action = 'update',
     employeeNumber = OLD.employeeNumber,
     
     lastname = OLD.lname,
     changedat = NOW(); 



->Create table given below: Salesperson and Customer
================================================
--->Create table :-

create TABLE Salesperson (SNo int(10) PRIMARY key,SNAME varchar(100),CITY varchar(200), COMM int(10)); 

---> INSERT TABLE:-

insert INTO salesperson (SNo,SNAME,CITY,COMM) VALUES(1001,'Peel','London',.12);
insert INTO salesperson (SNo,SNAME,CITY,COMM) VALUES(1002,'Serres','San Jose',.13);
insert INTO salesperson (SNo,SNAME,CITY,COMM) VALUES(1004,'Motika','London',.11);
insert INTO salesperson (SNo,SNAME,CITY,COMM) VALUES(1007,'Rafkin','Barcelona',.15);
insert INTO salesperson (SNo,SNAME,CITY,COMM) VALUES(1003,'Axelrod','New York',.1);

--->Create table :- Customer
CREATE TABLE Customer( Cnm int (20), C_name varchar(20) , City varchar(20) , Rating int(20) , SNO int(20)  , PRIMARY KEY (Cnm) ,FOREIGN KEY (SNO) REFERENCES salesperson (SNO));

---> INSERT TABLE:-

INSERT INTO customer(Cnm,C_name,City,Rating,SNO)VALUES(201,'Hoffman','London',100,1001);
INSERT INTO customer(Cnm,C_name,City,Rating,SNO)VALUES(202,'Giovanne','Roe',200,1003);
INSERT INTO customer(Cnm,C_name,City,Rating,SNO)VALUES(202,'Giovanne','Roe',200,1003);
INSERT INTO customer(Cnm,C_name,City,Rating,SNO)VALUES(203,'Liu','San Jose',300,1002);
INSERT INTO customer(Cnm,C_name,City,Rating,SNO)VALUES(204,'Grass','Barcelona',100,1002);
INSERT INTO customer(Cnm,C_name,City,Rating,SNO)VALUES(206,'Clemens','London',300,1007);
INSERT INTO customer(Cnm,C_name,City,Rating,SNO)VALUES(207,'Pereira','Roe',100,1004);

Q - A)All orders for more than $1000. 

Answer:-Select * from salesperson where SNO > 1000;

Q - B)Names and cities of all salespeople in London with commission above 0.10 

Answer:-SELECT SNAME, CITY , COMM FROM salesperson WHERE COMM > 0.10 AND CITY = 'London';

Q - C)All salespeople either in Barcelona or in London

Answer:-Select SNAME, CITY from salesperson where CITY in ('Barcelona','London');

Q - D)All salespeople with commission between 0.10 and 0.12. (Boundary values should be excluded). 

Answer:-SELECT SNAME , COMM FROM salesperson WHERE COMM > 0.10 AND COMM < 0.12;

Q - E) All customers with NULL values in city column. 

Answer:- -

Q - F) All orders taken on Oct 3Rd and Oct 4th 1994.

Answer:- Select * from orders where odate in (‘03-OCT-94’,’04-OCT-94’); 

Q - G) All customers serviced by peel or Motika. 

Answer:- Select cname from cust, orders where orders.cnum = cust.cnum and 
	orders.snum in ( select snum from salespeople where sname in 'Peel','Motika')); 

Q - H) All customers whose names begin with a letter from A to B 

Answer:- -

Q - I)All customers excluding those with rating <= 100 unless they are located in Rome 

Answer:-SELECT C_name FROM customer WHERE Rating <= 100 OR City = 'Rome';

Q - J) All orders except those with 0 or NULL value in amt field. 

Answer:- Select onum from orders where amt != 0 or amt is not null;

Q - J) Count the number of salespeople currently listing orders in the order table.  

Answer:- Select count(distinct snum) from orders; 



























